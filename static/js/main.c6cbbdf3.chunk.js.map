{"version":3,"sources":["store/auth-Slice.jsx","store/products-Slice.jsx","store/store.jsx","store/cart-Actions.jsx","App.js","reportWebVitals.js","index.js","store/cart-Slice.jsx","api/axiosClient.js","api/productApi.js"],"names":["authSlice","createSlice","name","initialState","user","email","login","token","changed","reducers","loginHandler","state","action","payload","localStorage","setItem","process","logoutHandler","removeItem","replaceLogin","actions","productSlice","products","replaceProducts","productActions","store","configureStore","reducer","cart","cartSlice","auth","LOCAL_KEY","Product","lazy","Checkout","Admin","Cart","News","Login","Register","ProductDetail","App","dispatch","useDispatch","useSelector","useEffect","data","JSON","parse","getItem","cartActions","replaceCart","error","console","log","document","title","isInitial","stringify","items","totalPriceCart","transDataToLocal","a","fetchingProducts","productApi","getAll","key","responseData","push","productList","className","fallback","CircularProgress","sx","width","height","display","justifyContent","alginItems","path","element","to","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","CssBaseline","getElementById","isCanNext","fullname","address","phone","cardName","cardNumber","cardExp","cardCvv","addItemToCart","newItem","price","existingItem","find","item","id","quantity","totalPriceOfItem","removeItemFromCart","filter","resetInitial","gotoNextStep","resetStep","addAddress","axiosClient","axios","create","baseURL","headers","paramsSerializer","params","queryString","interceptors","request","use","config","response","url","get","add","image","previewDescription","detailDescription","post"],"mappings":"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","file":"static/js/main.c6cbbdf3.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n    user: '',\r\n    email: '',\r\n    login: false,\r\n    token: '',\r\n    changed: false\r\n}\r\nconst authSlice = createSlice({\r\n    name: 'auth',\r\n    initialState,\r\n    reducers: {\r\n        loginHandler(state, action ) {\r\n            const token = action.payload;           \r\n            state.token = token;            \r\n            state.changed = true;     \r\n            localStorage.setItem(process.env.REACT_APP_LOCAL_KEY, token);        \r\n        },\r\n        logoutHandler(state ) {\r\n            state.token = '';\r\n            state.changed = true;\r\n            localStorage.removeItem(process.env.REACT_APP_LOCAL_KEY);\r\n        },\r\n        replaceLogin(state, action) {\r\n            state.login = action.payload.login;\r\n        }\r\n    }\r\n});\r\n\r\n \r\nexport const sendLogginState = (logginState) => {    \r\n    localStorage.setItem('loggin', JSON.stringify({login: logginState}) );\r\n}\r\n\r\nexport const replaceLoginState = () => {    \r\n    const logginState = JSON.parse(localStorage.getItem('loggin'));\r\n    return (dispatch) => {\r\n        dispatch(authActions.replaceLogin(logginState));\r\n    }\r\n}\r\n\r\nexport const authActions = authSlice.actions;\r\nexport default authSlice;","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst productSlice = createSlice({\r\n    name: 'products',\r\n    initialState: {products: []},\r\n    reducers:{\r\n        replaceProducts (state, action) {\r\n            state.products = action.payload;             \r\n        },\r\n    }\r\n});\r\n\r\nexport const productActions = productSlice.actions;\r\nexport default productSlice;","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport authSlice from \"./auth-Slice\";\r\nimport cartSlice from \"./cart-Slice\";\r\nimport productSlice from \"./products-Slice\";\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        cart: cartSlice.reducer,\r\n        auth: authSlice.reducer,\r\n        products: productSlice.reducer,\r\n    }\r\n});\r\n\r\nexport default store;","import { cartActions } from \"./cart-Slice\";\r\n\r\nconst firebaseLink = \"https://project-2532894124166455430-default-rtdb.firebaseio.com\";\r\nconst LOCAL_KEY = \"cart\";\r\n\r\nexport const sendingData = async (cart) => {\r\n    const sendRequest = async () => {\r\n        const response = await fetch(`${firebaseLink}/cart.json`, {\r\n            method: \"PUT\",\r\n            body: JSON.stringify({ items: cart.items, totalPriceCart: cart.totalPriceCart }),\r\n        });\r\n\r\n        if (!response.ok) {\r\n            throw new Error(\"Some thing went wrong\");\r\n        }\r\n\r\n        return \"Send success\";\r\n    };\r\n\r\n    try {\r\n        const message = await sendRequest();\r\n        console.log(message);\r\n    } catch (error) {\r\n        console.log(\"Not success\");\r\n    }\r\n};\r\n\r\nexport const fetchingData = () => {\r\n    return async (dispatch) => {\r\n        const sendRequest = async () => {\r\n            const response = await fetch(`${firebaseLink}/cart.json`);\r\n\r\n            if (!response.ok) {\r\n                throw new Error(\"Some thing went wrong\");\r\n            }\r\n\r\n            const data = await response.json();\r\n            return data;\r\n        };\r\n\r\n        try {\r\n            const data = await sendRequest();\r\n            dispatch(cartActions.replaceCart(data));\r\n            console.log(\"Fetching success\");\r\n        } catch (error) {\r\n            console.log(\"Fetching not success\");\r\n        }\r\n    };\r\n};\r\n\r\nexport const transDataToLocal = (cart) => {\r\n    localStorage.setItem(LOCAL_KEY, JSON.stringify({ items: cart.items, totalPriceCart: cart.totalPriceCart }));\r\n};\r\n\r\nexport const getDataFromLocal = () => {\r\n    return (dispatch) => {\r\n        const data = JSON.parse(localStorage.getItem(LOCAL_KEY));\r\n        dispatch(cartActions.replaceCart(data));       \r\n    };\r\n};\r\n","import React, { useEffect, lazy, Suspense } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Routes, Route, Navigate } from \"react-router-dom\";\n\nimport CircularProgress from \"@mui/material/CircularProgress\";\n\nimport { productActions } from \"./store/products-Slice\";\nimport productApi from \"./api/productApi\";\nimport { transDataToLocal } from \"./store/cart-Actions\";\nimport { getDataFromLocal } from \"./store/cart-Actions\";\n\n// import Header from \"./components/layout/Header/Header\";\n// import Footer from \"./components/layout/Footer/Footer\";\nconst Product = lazy(() => import(\"./pages/Product\"));\nconst Checkout = lazy(() => import(\"./components/products/Cart/Checkout/Checkout\"));\nconst Admin = lazy(() => import(\"./pages/Admin\"));\nconst Cart = lazy(() => import(\"./components/products/Cart/Cart\"));\nconst News = lazy(() => import(\"./pages/News\"));\nconst Login = lazy(() => import(\"./components/auth/Login\"));\nconst Register = lazy(() => import(\"./components/auth/Register\"));\nconst ProductDetail = lazy(() => import(\"./components/products/ProductDetail\"));\n\nfunction App() {\n    const dispatch = useDispatch();\n    const cart = useSelector((state) => state.cart);\n\n    useEffect(() => {\n        try {\n            dispatch(getDataFromLocal());\n        } catch (error) {\n            console.log(error + \" Loi \");\n        }\n\n        document.title = \"27-10-2021\";\n    }, []);\n\n    useEffect(() => {\n        if (!cart.isInitial) {\n            transDataToLocal(cart);\n        }\n    }, [cart]);\n\n    useEffect(async () => {\n        const fetchingProducts = async () => {\n            const responseData = await productApi.getAll();\n            let data = [];\n            for (const key in responseData) {\n                data.push(responseData[key]);\n            }\n            return data;\n        };\n\n        try {\n            const productList = await fetchingProducts();\n            dispatch(productActions.replaceProducts(productList));\n        } catch (error) {\n            console.log(\"Some thing went wrong \" + error);\n        }\n    }, [dispatch]);\n\n    return (\n        <div className=\"App\">\n            <Suspense\n                fallback={\n                    <CircularProgress\n                        sx={{\n                            width: 200,\n                            height: 200,\n                            display: \"flex\",\n                            justifyContent: \"center\",\n                            alginItems: \"center\",\n                        }}\n                    />\n                }\n            >\n                <Routes>\n                    <Route path=\"/\" element={<Navigate to=\"/products\" />} />\n                    <Route path=\"/products\" element={<Product />} />\n                    <Route path=\"/products/:productId\" element={ProductDetail} />\n                    <Route path=\"/news\" element={<News />} />\n                    <Route path=\"/about\">About</Route>\n                    <Route path=\"/login\" element={<Login />} />\n                    <Route path=\"/register\" element={<Register />} />\n                    <Route path=\"/cart\" element={<Cart />} />\n                    <Route path=\"/admin\" element={<Admin />} />\n                    <Route path=\"checkout\" element={<Checkout />} />\n                </Routes>\n                {/* <Footer /> */}\n            </Suspense>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { BrowserRouter, HashRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store/store\";\n\nimport { CssBaseline } from '@mui/material';\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n        <HashRouter  >\n            <CssBaseline />\n            <App />\n        </HashRouter>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n    isInitial: true,\r\n    items: [],\r\n    totalPriceCart: 0,\r\n    isCanNext: false,\r\n    fullname: '',\r\n    address: '',\r\n    phone: '',\r\n    cardName: '',\r\n    cardNumber: '',\r\n    cardExp: '',\r\n    cardCvv: ''\r\n};\r\n\r\nconst cartSlice = createSlice({\r\n    name: \"cart\",\r\n    initialState,\r\n    reducers: {\r\n        addItemToCart(state, action) {\r\n            state.isInitial = false;\r\n            const newItem = action.payload;\r\n            state.totalPriceCart += newItem.price;\r\n            const existingItem = state.items.find((item) => item.id === newItem.id);\r\n\r\n            if (existingItem) {\r\n                existingItem.quantity++;\r\n                existingItem.totalPriceOfItem += newItem.price;\r\n            } else {\r\n                state.items.push({\r\n                    id: newItem.id,\r\n                    name: newItem.title,\r\n                    quantity: 1,\r\n                    price: newItem.price,\r\n                    totalPriceOfItem: newItem.price,\r\n                });\r\n            }\r\n        },\r\n        replaceCart(state, action) {\r\n             state.items = action.payload.items;\r\n             state.totalPriceCart  = action.payload.totalPriceCart;\r\n             state.isInitial= true;\r\n        },\r\n        removeItemFromCart(state, action) {\r\n            state.isInitial = false;\r\n            const id = action.payload;\r\n            const existingItem = state.items.find((item) => item.id === id);\r\n            state.totalPriceCart -= existingItem.price;\r\n\r\n            if (existingItem.quantity === 1) {\r\n                state.items = state.items.filter((item) => item.id !== id);\r\n            } else {\r\n                existingItem.quantity--;\r\n                existingItem.totalPriceOfItem -= existingItem.price;\r\n            }\r\n        },\r\n        resetInitial(state) {\r\n            state.isInitial = true;\r\n        },\r\n        gotoNextStep(state) {\r\n            state.isCanNext = true;\r\n        },\r\n        resetStep(state) {\r\n            state.isCanNext = false;\r\n        },\r\n        addAddress(state, {name, address, phone}) {\r\n            state.fullname = name;\r\n            state.address = address;\r\n            state.phone = phone;\r\n        }\r\n    },\r\n});\r\n \r\n\r\nexport const cartActions = cartSlice.actions;\r\nexport default cartSlice;\r\n","import axios from \"axios\";\r\nimport queryString from \"query-string\";\r\n\r\nconst axiosClient = axios.create({\r\n    baseURL: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n    headers: {\r\n        \"content-type\": \"application/json\",\r\n    },\r\n    paramsSerializer: (params) => queryString.stringify(params),\r\n});\r\n\r\naxiosClient.interceptors.request.use(async (config) => {\r\n    //Handle token here...\r\n   \r\n    return config;\r\n});\r\n\r\naxiosClient.interceptors.response.use(\r\n    (response) => {\r\n        if (response && response.data) {\r\n            return response.data;\r\n        }\r\n\r\n        return response;\r\n    },\r\n    (error) => {\r\n        //Handle errors\r\n        throw error;\r\n    }\r\n);\r\n\r\nexport default axiosClient;\r\n","import axiosClient from \"./axiosClient\";\r\n\r\nconst url = \"https://project-2532894124166455430-default-rtdb.firebaseio.com/products.json\";\r\n\r\nconst productApi = {\r\n    getAll: (params) => {\r\n        return axiosClient.get(url, { params });\r\n    },\r\n\r\n    get: (id) => {\r\n        return axiosClient.get(url, id);\r\n    },\r\n\r\n    add: ({ id, title, image, previewDescription, detailDescription, price }) => {\r\n        return axiosClient.post(url, { id, title, image, previewDescription, detailDescription, price });\r\n    },\r\n    post: (params) => {\r\n        return axiosClient.post(url, { params });\r\n    },\r\n};\r\n\r\nexport default productApi;\r\n"],"sourceRoot":""}