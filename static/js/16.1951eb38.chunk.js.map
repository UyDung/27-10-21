{"version":3,"sources":["components/products/Cart/Checkout/AddressForm.jsx","components/products/Cart/Checkout/Review.jsx","components/products/Cart/Checkout/PaymentForm.jsx","components/products/Cart/Checkout/Checkout.jsx"],"names":["ErrorSpan","styled","theme","color","palette","error","main","fontStyle","padding","spacing","fontSize","AddressForm","dispatch","useDispatch","userInfo","useSelector","state","cart","schema","Yup","shape","fullName","required","address","phone","matches","useForm","mode","resolver","yupResolver","register","formState","errors","isValid","useEffect","cartActions","resetStep","gotoNextStep","Typography","variant","gutterBottom","Grid","container","item","xs","TextField","id","name","label","fullWidth","autoComplete","value","fullname","message","FormControlLabel","control","Checkbox","Review","items","totalPriceCart","total","Number","parseFloat","toFixed","List","disablePadding","map","ListItem","sx","py","px","ListItemText","primary","secondary","quantity","price","fontWeight","ErrorStyled","PaymentForm","cardName","cardNumber","cardExp","cardCvv","md","helperText","steps","createTheme","Checkout","isCanNext","useState","activeStep","setActiveStep","ThemeProvider","Container","component","maxWidth","mb","Paper","my","p","align","Stepper","pt","pb","Step","StepLabel","Fragment","length","step","Error","getStepContent","Box","display","justifyContent","Button","onClick","mt","ml","disabled"],"mappings":"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","file":"static/js/16.1951eb38.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { styled } from \"@mui/material\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { cartActions } from \"../../../../store/cart-Slice\";\r\n\r\nconst ErrorSpan = styled(\"span\")(({ theme }) => ({\r\n    color: theme.palette.error.main,\r\n    fontStyle: \"italic\",\r\n    padding: theme.spacing(1, 3),\r\n    fontSize: theme.spacing(2),\r\n}));\r\n\r\nconst AddressForm = () => {\r\n    const dispatch = useDispatch();\r\n    const userInfo = useSelector(state => state.cart);\r\n    \r\n    const phoneRegExp =\r\n        /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\r\n\r\n    const schema = Yup.object().shape({\r\n        fullName: Yup.string().required(\"FullName is required\"),\r\n        address: Yup.string().required(\"Address is required\"),\r\n        phone: Yup.string().matches(phoneRegExp, \"Phone number is not valid\"),\r\n    });\r\n\r\n    const {\r\n        register,\r\n        formState: { errors, isValid },\r\n    } = useForm({\r\n        mode: \"onBlur\",\r\n        resolver: yupResolver(schema),\r\n    });\r\n\r\n    useEffect(() => {\r\n        dispatch(cartActions.resetStep());\r\n    }, []);\r\n    \r\n    useEffect(() => {\r\n        if(isValid) {\r\n            dispatch(cartActions.gotoNextStep());\r\n        }\r\n        \r\n    }, [isValid]);\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n                Shipping address\r\n            </Typography>\r\n\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={12}>\r\n                    <TextField\r\n                        required\r\n                        {...register(\"fullName\")}\r\n                        id=\"fullName\"\r\n                        name=\"fullName\"\r\n                        label=\"Full Name\"\r\n                        fullWidth\r\n                        autoComplete=\"given-name\"\r\n                        variant=\"standard\"\r\n                        value={userInfo.fullname}\r\n                    />\r\n                </Grid>\r\n                <ErrorSpan>{errors.fullName && errors.fullName.message}</ErrorSpan>\r\n\r\n                <Grid item xs={12}>\r\n                    <TextField\r\n                        {...register(\"address\")}\r\n                        required\r\n                        id=\"address\"\r\n                        name=\"address\"\r\n                        label=\"Address  \"\r\n                        fullWidth\r\n                        autoComplete=\"shipping address \"\r\n                        variant=\"standard\"\r\n                        value={userInfo.address}\r\n                    />\r\n                </Grid>\r\n                <ErrorSpan>{errors.address && errors.address.message}</ErrorSpan>\r\n                <Grid item xs={12}>\r\n                    <TextField\r\n                        {...register(\"phone\")}\r\n                        required\r\n                        id=\"phone\"\r\n                        name=\"phone\"\r\n                        label=\"Phone number\"\r\n                        fullWidth\r\n                        autoComplete=\"shipping phone number\"\r\n                        variant=\"standard\"\r\n                        value={userInfo.phone}\r\n                    />\r\n                    <ErrorSpan>{errors.phone && errors.phone.message}</ErrorSpan>\r\n                </Grid>\r\n\r\n                <Grid item xs={12}>\r\n                    <FormControlLabel\r\n                        control={<Checkbox color=\"secondary\" name=\"saveAddress\" value=\"yes\" />}\r\n                        label=\"Use this address for payment details\"\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AddressForm;\r\n","import { List, ListItem, ListItemText, Grid, Typography, Checkbox } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n \r\nconst Review = () => {\r\n    const {items, totalPriceCart} = useSelector(state => state.cart);\r\n    const total = Number.parseFloat(totalPriceCart).toFixed(2);\r\n    return (\r\n        <>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n                Order summany\r\n            </Typography>\r\n            <List disablePadding>\r\n                {items.map((cart) => (\r\n                    <ListItem key={cart.name} sx={{ py: 1, px: 0 }}>\r\n                        <ListItemText primary={cart.name} secondary={cart.quantity} />\r\n                        <Typography variant=\"body2\">{cart.price}</Typography>\r\n                    </ListItem>\r\n                ))}\r\n                <ListItem sx={{ py: 1, px: 0 }}>\r\n                    <ListItemText primary=\"Total\" />\r\n                    <Typography variant=\"subtitle1\" sx={{ fontWeight: 700 }}>\r\n                        $ {total}\r\n                    </Typography>\r\n                </ListItem>\r\n            </List>\r\n\r\n            \r\n        </>\r\n    );\r\n};\r\n\r\nexport default Review;\r\n","import { FormControlLabel, TextField, Typography, Grid, Checkbox, styled } from \"@mui/material\";\r\nimport React, { useEffect } from \"react\";\r\n\r\nimport { useDispatch } from \"react-redux\";\r\nimport { cartActions } from \"../../../../store/cart-Slice\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as Yup from \"yup\";\r\n\r\nconst ErrorStyled = styled(\"span\")(({ theme }) => ({\r\n    color: theme.palette.error.main,\r\n    fontStyle: \"italic\",\r\n}));\r\n\r\nconst PaymentForm = () => {\r\n    const dispatch = useDispatch();\r\n    const schema = Yup.object().shape({\r\n        cardName: Yup.string().required(\"Do not empty this field\"),\r\n        cardNumber: Yup.string().required(\"Do not empty this field\"),\r\n        cardExp: Yup.string().required(\"Do not empty this field\"),\r\n        cardCvv: Yup.string().required(\"Do not empty this field\"),\r\n    });\r\n\r\n    const {\r\n        register,\r\n        formState: { errors, isValid },\r\n    } = useForm({\r\n        mode: \"onBlur\",\r\n        resolver: yupResolver(schema),\r\n    });\r\n\r\n    useEffect(() => {\r\n        dispatch(cartActions.resetStep());\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (isValid) {\r\n            dispatch(cartActions.gotoNextStep());\r\n        }\r\n    }, [isValid]);\r\n\r\n    return (\r\n        <>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n                Payment method\r\n            </Typography>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={12} md={6}>\r\n                    <TextField\r\n                        required\r\n                        {...register(\"cardName\")}\r\n                        id=\"cardName\"\r\n                        label=\"Name on card\"\r\n                        fullWidth\r\n                        autoComplete=\"cc-name\"\r\n                        variant=\"standard\"\r\n                    />\r\n                    <ErrorStyled>{errors.cardName && errors.cardName.message}</ErrorStyled>\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                    <TextField\r\n                        required\r\n                        {...register(\"cardNumber\")}\r\n                        id=\"cardNumber\"\r\n                        label=\"Card number\"\r\n                        fullWidth\r\n                        autoComplete=\"cc-number\"\r\n                        variant=\"standard\"\r\n                    />\r\n                    <ErrorStyled>{errors.cardNumber && errors.cardNumber.message}</ErrorStyled>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} md={6}>\r\n                    <TextField\r\n                        required\r\n                        {...register(\"cardExp\")}\r\n                        id=\"expDate\"\r\n                        label=\"Expiry date\"\r\n                        fullWidth\r\n                        autoComplete=\"cc-exp\"\r\n                        variant=\"standard\"\r\n                    />\r\n                    <ErrorStyled>{errors.cardExp && errors.cardExp.message}</ErrorStyled>\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                    <TextField\r\n                        required\r\n                        {...register(\"cardCvv\")}                         \r\n                        label=\"CVV\"\r\n                        helperText=\"Last three digits on signature strip\"\r\n                        fullWidth\r\n                        autoComplete=\"cc-csc\"\r\n                        variant=\"standard\"\r\n                    />\r\n                    <ErrorStyled>{errors.cardCvv && errors.cardCvv.message}</ErrorStyled>\r\n                </Grid>\r\n\r\n                <Grid item xs={12}>\r\n                    <FormControlLabel\r\n                        control={<Checkbox color=\"secondary\" name=\"saveCard\" value=\"yes\" />}\r\n                        label=\"Remember credit card details for next time\"\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default PaymentForm;\r\n","import React, { useState } from \"react\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\nimport Stepper from \"@mui/material/Stepper\";\r\nimport Step from \"@mui/material/Step\";\r\nimport StepLabel from \"@mui/material/StepLabel\";\r\nimport { Container, Paper, Button, Box } from \"@mui/material\";\r\n\r\nimport AddressForm from \"./AddressForm\";\r\n\r\nimport Review from \"./Review\";\r\n\r\nimport { Link, Typography } from \"@mui/material\";\r\nimport PaymentForm from \"./PaymentForm\";\r\n\r\nconst Copyright = () => {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\">\r\n            {\"Copyright &copy;\"}\r\n            <Link color=\"inherit\" href=\"#\">\r\n                Your Website{\" \"}\r\n            </Link>{\" \"}\r\n            {new Date().getFullYear()}\r\n            {\".\"}\r\n        </Typography>\r\n    );\r\n};\r\n\r\nconst steps = [\"Shipping address\", \"Payment method\", \"Review your order\"];\r\n\r\nconst theme = createTheme();\r\n\r\nconst Checkout = () => {\r\n    const isCanNext = useSelector((state) => state.cart.isCanNext);\r\n    \r\n    const [activeStep, setActiveStep] = useState(0);\r\n    \r\n    const getStepContent = (step) => {\r\n        switch (step) {\r\n            case 0:\r\n                return (<AddressForm />);\r\n            case 1:\r\n                return (<PaymentForm />);\r\n            case 2:\r\n                return (<Review />);\r\n            default:\r\n                throw new Error(\"Unknown step\");\r\n        }\r\n    };\r\n\r\n\r\n    const handleNext = () => {\r\n        setActiveStep(activeStep + 1);\r\n    };\r\n\r\n    const handleBack = () => {\r\n        setActiveStep(activeStep - 1);\r\n    };\r\n\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <Container component=\"main\" maxWidth=\"sm\" sx={{ mb: 4 }}>\r\n                <Paper variant=\"outlined\" sx={{ my: { xs: 3, md: 6 }, p: { xs: 2, md: 3 } }}>\r\n                    <Typography component=\"h1\" variant=\"h4\" align=\"center\">\r\n                        Checkout\r\n                    </Typography>\r\n                    <Stepper activeStep={activeStep} sx={{ pt: 3, pb: 5 }}>\r\n                        {steps.map((label) => (\r\n                            <Step key={label}>\r\n                                <StepLabel>{label}</StepLabel>\r\n                            </Step>\r\n                        ))}\r\n                    </Stepper>\r\n\r\n                    <React.Fragment>\r\n                        {activeStep === steps.length ? (\r\n                            <React.Fragment>\r\n                                <Typography variant=\"h5\" gutterBottom>\r\n                                    Thank you for your order\r\n                                </Typography>\r\n                                <Typography variant=\"subtitle1\">\r\n                                    Your order number is #123445. We have emailled your order confirmation, and\r\n                                    will send you an update when your order has shipped.\r\n                                </Typography>\r\n                            </React.Fragment>\r\n                        ) : (\r\n                            <React.Fragment>\r\n                                {getStepContent(activeStep)}\r\n                                \r\n                                <Box sx={{ display: \"flex\", justifyContent: \"flex-end\" }}>\r\n                                    {activeStep !== 0 && (\r\n                                        <Button onClick={handleBack} sx={{ mt: 3, ml: 1 }}>\r\n                                            Back\r\n                                        </Button>\r\n                                    )}\r\n\r\n                                    <Button\r\n                                        variant=\"contained\"\r\n                                        onClick={handleNext}\r\n                                        sx={{ mt: 3, ml: 1 }}\r\n                                        disabled={!isCanNext}\r\n                                    >\r\n                                        {activeStep === steps.length - 1 ? \"Place order\" : \"Next\"}\r\n                                    </Button>\r\n                                </Box>\r\n                            </React.Fragment>\r\n                        )}\r\n                    </React.Fragment>\r\n                </Paper>\r\n            </Container>\r\n        </ThemeProvider>\r\n    );\r\n};\r\n\r\nexport default Checkout;\r\n"],"sourceRoot":""}