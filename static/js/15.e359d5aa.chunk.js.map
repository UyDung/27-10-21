{"version":3,"sources":["components/products/Cart/CartItem.jsx","components/products/Cart/OrderForm.jsx","components/products/Cart/Cart.jsx"],"names":["CartItem","quantity","title","price","id","dispatch","useDispatch","TableRow","TableCell","Button","onClick","cartActions","addItemToCart","removeItemFromCart","OrderForm","useState","Date","startDate","setStartDate","className","htmlFor","type","name","placeholder","selected","onChange","date","Cart","navigate","useNavigate","isLoggedIn","useSelector","state","auth","token","listItems","cart","items","totalPrice","totalPriceCart","toFixed","TableContainer","component","Paper","sx","maxWidth","maxHeight","marginTop","marginLeft","transform","Table","stickyHeader","TableHead","zIndex","backgroundColor","color","TableBody","map","item","TableFooter","Typography","variant","length","size","disabled"],"mappings":"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","file":"static/js/15.e359d5aa.chunk.js","sourcesContent":["import { useDispatch } from \"react-redux\";\r\nimport { cartActions } from \"../../../store/cart-Slice\";\r\n\r\nimport { TableRow, TableCell, Button } from \"@mui/material\";\r\nimport AddCircleIcon from \"@mui/icons-material/AddCircle\";\r\nimport RemoveCircleOutlineIcon from \"@mui/icons-material/RemoveCircleOutline\";\r\n\r\nconst CartItem = ({ quantity, title, price, id }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const addOneToCart = () => {\r\n        dispatch(cartActions.addItemToCart({ title, price, id }));\r\n    };\r\n\r\n    const removeOneFromCart = () => {\r\n        dispatch(cartActions.removeItemFromCart(id));\r\n    };\r\n\r\n    return (\r\n        <TableRow key={id}>\r\n            <TableCell>{title}</TableCell>\r\n            <TableCell>{price}</TableCell>\r\n            <TableCell>{quantity}</TableCell>\r\n            <TableCell>\r\n                <Button><AddCircleIcon onClick={addOneToCart}  /></Button>\r\n            </TableCell>\r\n            <TableCell>\r\n               <Button> <RemoveCircleOutlineIcon onClick={removeOneFromCart} /></Button>\r\n            </TableCell>\r\n        </TableRow>\r\n    );\r\n};\r\n\r\nexport default CartItem;\r\n","import DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nimport { useState } from \"react\";\r\n\r\nconst OrderForm = () => {\r\n    const [startDate, setStartDate] = useState(new Date());\r\n\r\n    const dateChangeHandler = (date) => setStartDate(date);\r\n\r\n    return (\r\n        <form className=\"flex flex-col gap-2 \">\r\n            <h3 className=\"text-center font-bold text-2xl\">Delivery To</h3>\r\n            <div className=\"group  flex\">\r\n                <label htmlFor=\"username\">Received Person</label>\r\n                <input\r\n                    className=\"p-2 outline-none border-2 w-3/4 ml-auto\"\r\n                    type=\"text\"\r\n                    name=\"username\"\r\n                    placeholder=\"Enter your name\"\r\n                />\r\n            </div>\r\n            <div className=\"group  flex\">\r\n                <label htmlFor=\"address\">Delivery Address</label>\r\n                <textarea className=\"p-2 outline-none border-2 w-3/4 ml-auto\" name=\"address\" id=\"address\" />\r\n            </div>\r\n\r\n            <div className=\"group flex items-center\">\r\n                <label htmlFor=\"address \">Time of Delivery</label>\r\n                <div className=\"border-2  ml-auto\">\r\n                    {\" \"}\r\n                    <DatePicker selected={startDate} onChange={dateChangeHandler} />\r\n                </div>\r\n            </div>\r\n            <div className=\"group  flex\">\r\n                <label htmlFor=\"address\">Remarks</label>\r\n                <textarea className=\"p-2 outline-none border-2 w-3/4 ml-auto\" name=\"remark\" id=\"address\" />\r\n            </div>\r\n            <div className=\"group  flex\">\r\n                <label htmlFor=\"phone\">Phone Number</label>\r\n                <input className=\"p-2 outline-none border-2 w-3/4 ml-auto\" type=\"text\" name=\"phone\" id=\"phone\" />\r\n            </div>\r\n\r\n            <button className=\" rounded ml-auto py-1 px-6 bg-purple-500 text-white active:bg-purple-700 \">\r\n                Order\r\n            </button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default OrderForm;\r\n","import { useNavigate } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { v4 as uuid_v4 } from \"uuid\";\r\n\r\n// import classes from \"./Cart.module.css\";\r\nimport CartItem from \"./CartItem\";\r\nimport OrderForm from \"./OrderForm\";\r\nimport {\r\n  \r\n    Paper,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableRow,\r\n    TableHead,\r\n    Button,\r\n    CssBaseline,\r\n    Typography,\r\n    TableFooter,\r\n} from \"@mui/material\";\r\n\r\nconst Cart = () => {\r\n    const navigate = useNavigate();\r\n    const isLoggedIn = useSelector((state) => state.auth.token);\r\n    const listItems = useSelector((state) => state.cart.items);\r\n    const totalPrice = useSelector((state) => state.cart.totalPriceCart).toFixed(2);\r\n\r\n    const closeCartHandler = () => navigate(\"/\");\r\n\r\n    const goLoginHandler = () => {\r\n        navigate(\"/login\");\r\n    };\r\n\r\n \r\n    return (\r\n        <>\r\n            \r\n            <TableContainer\r\n                component={Paper}\r\n                sx={{\r\n                    maxWidth: \"650px\",\r\n                    maxHeight: \"450px\",\r\n                    marginTop: \"12vh\",                   \r\n                    marginLeft: \"50%\",\r\n                    transform: \"translateX(-50%)\",\r\n                   \r\n                }}\r\n            >\r\n                <Table aria-label=\"cart table\" stickyHeader>\r\n                    <TableHead sx={{ zIndex: 10, backgroundColor: \"black\", color: \"white\" }}>\r\n                        <TableRow>\r\n                            <TableCell>Product's Name</TableCell>\r\n                            <TableCell>Price</TableCell>\r\n                            <TableCell>Quantity</TableCell>\r\n                            <TableCell>Add more</TableCell>\r\n                            <TableCell>Remove one</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n\r\n                    <TableBody>\r\n                        {listItems.map((item) => (\r\n                            <CartItem key={item.id} id={item.id} price={item.price} quantity={item.quantity} title={item.name} />\r\n                        ))}\r\n                    </TableBody>\r\n\r\n                    <TableFooter>\r\n                        <TableRow>\r\n                            <TableCell>\r\n                                <Typography variant=\"h6\">Total</Typography>\r\n                            </TableCell>\r\n                            <TableCell></TableCell>\r\n                            <TableCell></TableCell>\r\n                            <TableCell></TableCell>\r\n                            <TableCell>\r\n                                <Typography variant=\"h6\">$ {totalPrice}</Typography>\r\n                            </TableCell>\r\n                        </TableRow>\r\n                        {isLoggedIn && listItems.length !== 0 && <OrderForm />}\r\n                        <TableRow>\r\n                            <TableCell></TableCell>\r\n                            <TableCell></TableCell>\r\n                            <TableCell></TableCell>\r\n                            <TableCell>\r\n                                {!isLoggedIn && (\r\n                                    <Button\r\n                                        variant=\"contained\"\r\n                                        size=\"small\"\r\n                                        onClick={goLoginHandler}\r\n                                        disabled={!listItems.length > 0}\r\n                                    >\r\n                                        Checkout\r\n                                    </Button>\r\n                                )}\r\n                            </TableCell>\r\n                            <TableCell>\r\n                                <Button variant=\"contained\" size=\"small\" onClick={closeCartHandler}>\r\n                                    Close\r\n                                </Button>\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    </TableFooter>\r\n                </Table>\r\n            </TableContainer>\r\n        </ >\r\n    );\r\n};\r\n\r\nexport default Cart;\r\n"],"sourceRoot":""}